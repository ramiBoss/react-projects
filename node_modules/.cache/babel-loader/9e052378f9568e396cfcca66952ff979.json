{"ast":null,"code":"var _jsxFileName = \"/home/appiness/github/stopwatch/src/Stopwatch.js\";\nimport React from \"react\";\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.startTimer,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.startTimer\n        });\n        console.log(this.state.timerTime);\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerOn: false,\n        timerTime: 0,\n        timerStart: 0\n      });\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state;\n    let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.timerOn === false && this.state.timerTime === 0 && React.createElement(\"button\", {\n      className: \"ui green button\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \", \"Start\", \" \"), this.state.timerOn === true && React.createElement(\"button\", {\n      className: \"ui labeled icon button\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"pause icon \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \" Stop\", \" \"), this.state.timerOn === false && this.state.timerTime > 0 && React.createElement(\"button\", {\n      className: \"ui blue button\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \", \"Resume\", \" \"), this.state.timerOn === false && this.state.timerTime > 0 && React.createElement(\"button\", {\n      className: \" ui red button\",\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", \"Reset\", \" \")));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/appiness/github/stopwatch/src/Stopwatch.js"],"names":["React","Stopwatch","Component","constructor","props","startTimer","setState","timerOn","timerTime","state","timerStart","Date","now","timer","setInterval","console","log","stopTimer","clearInterval","resetTimer","render","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass Stopwatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.startTimer,\n      timerStart: Date.now() - this.state.timerTime\n    });\n\n    this.timer = setInterval(() => {\n      this.setState({ timerTime: Date.now() - this.state.startTimer });\n      console.log(this.state.timerTime);\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState({ timerOn: false, timerTime: 0, timerStart: 0 });\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n\n    return (\n      <div>\n        <div>\n          {hours} : {minutes} : {seconds} : {centiseconds}\n        </div>\n        <div>\n          {this.state.timerOn === false && this.state.timerTime === 0 && (\n            <button className=\"ui green button\" onClick={this.startTimer}>\n              {\" \"}\n              Start{\" \"}\n            </button>\n          )}\n          {this.state.timerOn === true && (\n            <button className=\"ui labeled icon button\" onClick={this.stopTimer}>\n              {\" \"}\n              <i className=\"pause icon \"></i> Stop{\" \"}\n            </button>\n          )}\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\n            <button className=\"ui blue button\" onClick={this.startTimer}>\n              {\" \"}\n              Resume{\" \"}\n            </button>\n          )}\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\n            <button className=\" ui red button\" onClick={this.resetTimer}>\n              {\" \"}\n              Reset{\" \"}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}